import{l as o,c as r,a as e,j as s,v as a,t as v,x as m,H as d,o as x}from"./index-41JFHv3N.js";const f=["value"],V=["value"],y=["value"],B=Object.assign({name:"MyComponent"},{__name:"index",setup(b){const n=o(""),u=o(""),i=o("动态数据绑定1"),p=o("动态数据绑定2");return(g,l)=>(x(),r("div",null,[l[4]||(l[4]=e("h1",null,"🎉 表单输入绑定",-1)),e("input",{value:n.value,onInput:l[0]||(l[0]=t=>n.value=t.target.value)},null,40,f),s(" "+v(n.value)+" ",1),l[5]||(l[5]=e("p",null," v-model 在表单输入元素或组件上创建双向绑定。v-model 实际上是 v-bind 和 v-on 的语法糖 ",-1)),a(e("input",{"onUpdate:modelValue":l[1]||(l[1]=t=>n.value=t)},null,512),[[m,n.value]]),l[6]||(l[6]=e("h3",null,"动态数据绑定",-1)),l[7]||(l[7]=e("p",null," 但有时我们可能希望将该值绑定到当前组件实例上的动态数据。这可以通过使用 v-bind 来实现。:value ",-1)),a(e("input",{type:"radio","onUpdate:modelValue":l[2]||(l[2]=t=>u.value=t),value:i.value},null,8,V),[[d,u.value]]),a(e("input",{type:"radio","onUpdate:modelValue":l[3]||(l[3]=t=>u.value=t),value:p.value},null,8,y),[[d,u.value]]),s(" "+v(u.value),1)]))}});export{B as default};
